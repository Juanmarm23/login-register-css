{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanm\\\\OneDrive\\\\Desktop\\\\login-register-css\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport TextInput from './TextInput';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  //useState\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const validateEmail = email => {\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return regex.test(email) && email.endsWith('.com');\n  };\n  const validatePassword = password => {\n    //Validacion de contraseña \n    const isLongEnough = password.length >= 6;\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    return isLongEnough && hasUpperCase && hasNumber && hasSpecialChar;\n  };\n  const handleSubmit = () => {\n    if (!validateEmail(email)) {\n      setMessage('El email debe contener \"@\" y terminar en \".com\"');\n      return;\n    }\n    if (!validatePassword(password)) {\n      setMessage('La contraseña debe tener al menos 6 caracteres, una mayúscula, un número y un carácter especial.');\n      return;\n    }\n    setMessage('¡Login exitoso!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Correo Electr\\xF3nico\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      type: \"email\",\n      name: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Contrase\\xF1a\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      type: \"password\",\n      name: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Login\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green',\n        marginTop: '10px'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"d0J/XCGznNwJDPwFtxo8Y/0hle4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","TextInput","Button","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","message","setMessage","validateEmail","regex","test","endsWith","validatePassword","isLongEnough","length","hasUpperCase","hasNumber","hasSpecialChar","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","type","name","onClick","style","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/juanm/OneDrive/Desktop/login-register-css/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport TextInput from './TextInput';\r\nimport Button from './Button';\r\n\r\nconst Login = () => {                           //useState\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const validateEmail = (email) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regex.test(email) && email.endsWith('.com');\r\n  };\r\n\r\n  const validatePassword = (password) => {      //Validacion de contraseña \r\n    const isLongEnough = password.length >= 6;\r\n    const hasUpperCase = /[A-Z]/.test(password);\r\n    const hasNumber = /[0-9]/.test(password);\r\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n    return isLongEnough && hasUpperCase && hasNumber && hasSpecialChar;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!validateEmail(email)) {\r\n      setMessage('El email debe contener \"@\" y terminar en \".com\"');\r\n      return;\r\n    }\r\n\r\n    if (!validatePassword(password)) {\r\n      setMessage('La contraseña debe tener al menos 6 caracteres, una mayúscula, un número y un carácter especial.');\r\n      return;\r\n    }\r\n\r\n    setMessage('¡Login exitoso!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Iniciar Sesión</h2>\r\n\r\n      <TextInput\r\n        label=\"Correo Electrónico\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        type=\"email\"\r\n        name=\"email\"\r\n      />\r\n\r\n      <TextInput\r\n        label=\"Contraseña\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        type=\"password\"\r\n        name=\"password\"\r\n      />\r\n\r\n      <Button label=\"Login\" onClick={handleSubmit} />\r\n\r\n      {message && <p style={{ color: 'green', marginTop: '10px' }}>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}